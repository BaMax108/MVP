<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:HW_183"
        xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2" 
        x:Class="HW_183.UI.MainWindow"
        mc:Ignorable="d"
        Title="MainWindow"
        Height="450"
        MinHeight="200"
        Width="800" 
        MinWidth="300">
    <Window.Resources>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" 
                    Value="5"/>
            <Setter Property="VerticalAlignment" 
                    Value="Center"/>
            <Setter Property="HorizontalAlignment" 
                    Value="Left"/>
        </Style>

        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Margin" 
                    Value="5"/>
            <Setter Property="VerticalAlignment" 
                    Value="Stretch"/>
            <Setter Property="HorizontalAlignment" 
                    Value="Stretch"/>
            <Setter Property="TextWrapping" 
                    Value="Wrap"/>
        </Style>

        <!--#region Button-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" 
                                   SnapsToDevicePixels="true" 
                                   Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" 
                                   StrokeThickness="1" 
                                   StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--#region Brushes -->
        <SolidColorBrush x:Key="Button.Static.Background" Color="Transparent"/>
        <LinearGradientBrush x:Key="Button.Static.Border" 
                             EndPoint="0.5,1" 
                             StartPoint="0.5,0">
            <GradientStop Color="#FFFF6C31" 
                          Offset="0.0"/>
            <GradientStop Color="#FFFFAF31" 
                          Offset="1.0"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="Button.MouseOver.Background" 
                             EndPoint="0.5,1" 
                             StartPoint="0.5,0">
            <GradientStop Color="#FFFF6C31" 
                          Offset="0.0"/>
            <GradientStop Color="#FFFFAF31" 
                          Offset="1.0"/>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="Button.MouseOver.Border" 
                             EndPoint="0.5,1" 
                             StartPoint="0.5,0">
            <GradientStop Color="#FFFF6C31" 
                          Offset="0.0"/>
            <GradientStop Color="#FFFFAF31" 
                          Offset="1.0"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFFF6C31"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FFFF6C31"/>

        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <!--#endregion-->

        <Style x:Key="ButtonStyleCustom" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Foreground" 
                    Value="White"/>
            <Setter Property="Height" 
                    Value="25"/>
            <Setter Property="BorderThickness" 
                    Value="0,0,1,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}"
                                SnapsToDevicePixels="true" 
                                CornerRadius="5">
                            <ContentPresenter x:Name="contentPresenter" 
                                              Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                              Margin="{TemplateBinding Padding}" 
                                              RecognizesAccessKey="True" 
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" 
                                     Value="true">
                                <Setter Property="BorderBrush" 
                                        TargetName="border" 
                                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver"
                                     Value="true">
                                <Setter Property="Background" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" 
                                        TargetName="border"
                                        Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed"
                                     Value="true">
                                <Setter Property="Background" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" 
                                        TargetName="border" 
                                        Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush"
                                        TargetName="border" 
                                        Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" 
                                        TargetName="contentPresenter" 
                                        Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion-->

        <!--#region Menu-->
        <Style x:Key="{x:Type Menu}" 
               TargetType="{x:Type Menu}">
            <Setter Property="OverridesDefaultStyle" 
                    Value="True"/>
            <Setter Property="SnapsToDevicePixels" 
                    Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Menu}">
                        <Border BorderThickness="0">
                            <StackPanel ClipToBounds="True"
                                        Orientation="Horizontal" 
                                        IsItemsHost="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#region Brushes -->
        <SolidColorBrush x:Key="EnabledForegroundBrush" Color="White" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="Gray" />

        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FF353535" />
        <LinearGradientBrush x:Key="DisabledBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FF222222" Offset="0.0"/>
                    <GradientStop Color="#FF353535" Offset="1.0"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="WindowBackgroundBrush" StartPoint="0,0" EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FF222222" Offset="0.0"/>
                    <GradientStop Color="#FF353535" Offset="1.0"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="NormalBorderBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FF07FFB3" Offset="0.0"/>
                    <GradientStop Color="#FFB3FFE8" Offset="1.0"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="BorderBrush" StartPoint="0,0" EndPoint="0,1">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFFF6C31" Offset="0.0"/>
                    <GradientStop Color="#FFFFAF31" Offset="1.0"/>
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="SolidBorderBrush" Color="#FFFFAF31" />

        <SolidColorBrush x:Key="GlyphBrush" Color="#444" />
        <!--#endregion-->

        <Style x:Key="{x:Static MenuItem.SeparatorStyleKey}" 
               TargetType="{x:Type Separator}">
            <Setter Property="Height" 
                    Value="1"/>
            <Setter Property="Margin" 
                    Value="20,0,0,1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Separator}">
                        <Border BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TopLevelHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                         TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" 
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />
                    <Popup x:Name="Popup"
                        Placement="Bottom"
                        IsOpen="{TemplateBinding IsSubmenuOpen}"
                        AllowsTransparency="True" 
                        Focusable="False"
                        PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                Background="{StaticResource WindowBackgroundBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="1" >
                            <StackPanel IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                    <Setter TargetName="Popup" Property="PopupAnimation" Value="None"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource BorderBrush}"/>
                    <Setter TargetName="Border" Property="BorderBrush"
                        Value="Transparent"/>
                </Trigger>
                <Trigger SourceName="Popup" Property="AllowsTransparency" Value="True">
                    <Setter TargetName="SubmenuBorder" Property="Padding" Value="0,0,0,3"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource EnabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- TopLevelItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}" 
                    TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <ContentPresenter Margin="6,3,6,3" 
                                ContentSource="Header"
                                RecognizesAccessKey="True" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource BorderBrush}"/>
                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground"
                        Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource EnabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- SubmenuHeader -->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}" 
                        TargetType="{x:Type MenuItem}">
            <Border x:Name="Border"
                    Padding="0">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20" 
                                          SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto"
                                          SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="15"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                      Margin="6,0,6,0"
                                      VerticalAlignment="Center"
                                      Visibility="Collapsed"
                                      ContentSource="Icon"/>
                    <ContentPresenter x:Name="HeaderHost"
                                      Grid.Column="1"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText"
                               Grid.Column="2"
                               Text="{TemplateBinding InputGestureText}"
                               Margin="5,2,2,2"
                               DockPanel.Dock="Right"/>
                    <Path Grid.Column="3"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"
                          Data="M 0 0 L 0 7 L 4 3.5 Z"
                          Fill="{StaticResource GlyphBrush}" />
                    <Popup x:Name="Popup"
                           Placement="Right"
                           HorizontalOffset="0" 
                           IsOpen="{TemplateBinding IsSubmenuOpen}"
                           AllowsTransparency="True"
                           Focusable="False"
                           PopupAnimation="Fade">
                        <Border x:Name="SubmenuBorder"
                                SnapsToDevicePixels="True"
                                Background="{StaticResource DisabledBackgroundBrush}"
                                BorderBrush="{StaticResource SolidBorderBrush}"
                                BorderThickness="1" >
                            <StackPanel IsItemsHost="True" 
                                        KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </Border>
                    </Popup>
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon"
                         Value="{x:Null}">
                    <Setter TargetName="Icon" 
                            Property="Visibility" 
                            Value="Collapsed"/>
                </Trigger>
                <Trigger Property="IsHighlighted" 
                         Value="true">
                    <Setter TargetName="Border" 
                            Property="Background"
                            Value="{StaticResource SelectedBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsHighlighted"
                         Value="false">
                    <Setter TargetName="Border"
                            Property="Background"
                            Value="{StaticResource DisabledBackgroundBrush}"/>
                </Trigger>
                <Trigger SourceName="Popup" 
                         Property="AllowsTransparency"
                         Value="True">
                    <Setter TargetName="SubmenuBorder" 
                            Property="Padding" 
                            Value="0"/>
                </Trigger>
                <Trigger Property="IsEnabled" 
                         Value="false">
                    <Setter Property="Foreground" 
                            Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource EnabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <!-- SubmenuItem -->
        <ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}" 
                    TargetType="{x:Type MenuItem}">
            <Border x:Name="Border">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="20" SharedSizeGroup="Icon"/>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut"/>
                        <ColumnDefinition Width="5"/>
                    </Grid.ColumnDefinitions>
                    <ContentPresenter x:Name="Icon"
                                    Margin="6,0,6,0"
                                    VerticalAlignment="Center"
                                    ContentSource="Icon"
                                    Visibility="Collapsed"/>
                    <Border x:Name="Check"  
                        Width="13" Height="13" 
                        Visibility="Collapsed"
                        Margin="6,0,6,0" 
                        Background="{StaticResource BorderBrush}"
                        BorderThickness="1"
                        BorderBrush="{StaticResource NormalBorderBrush}">
                        <Path x:Name="CheckMark"
                            Width="7" Height="7" 
                            Visibility="Hidden"
                            SnapsToDevicePixels="False" 
                            Stroke="{StaticResource GlyphBrush}"
                            StrokeThickness="2"
                            Data="M 0 0 L 7 7 M 0 7 L 7 0" />
                    </Border>
                    <ContentPresenter x:Name="HeaderHost"
                                Grid.Column="1"
                                ContentSource="Header"
                                    Margin="0"
                                RecognizesAccessKey="True"/>
                    <TextBlock x:Name="InputGestureText"
                            Grid.Column="2"
                            Text="{TemplateBinding InputGestureText}"
                            Margin="5,2,0,2"
                            DockPanel.Dock="Right" />
                </Grid>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Icon" Value="{x:Null}">
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="true">
                    <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsCheckable" Value="true">
                    <Setter TargetName="Check" Property="Visibility" Value="Visible"/>
                    <Setter TargetName="Icon" Property="Visibility" Value="Hidden"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="true">
                    <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource SelectedBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsHighlighted" Value="false">
                    <Setter TargetName="Border" Property="Background"
                        Value="{StaticResource DisabledBackgroundBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource EnabledForegroundBrush}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        
        <Style x:Key="{x:Type MenuItem}" 
               TargetType="{x:Type MenuItem}">
            <Setter Property="OverridesDefaultStyle" 
                    Value="True"/>
            <Style.Triggers>
                <Trigger Property="Role" 
                         Value="TopLevelHeader">
                    <Setter Property="Template"
                            Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}"/>
                    <Setter Property="Grid.IsSharedSizeScope" 
                            Value="true"/>
                </Trigger>
                <Trigger Property="Role"
                         Value="TopLevelItem">
                    <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" Value="SubmenuHeader">
                    <Setter Property="Template"
                            Value="{StaticResource {x:Static MenuItem.SubmenuHeaderTemplateKey}}"/>
                </Trigger>
                <Trigger Property="Role" 
                         Value="SubmenuItem">
                    <Setter Property="Template"
                            Value="{StaticResource {x:Static MenuItem.SubmenuItemTemplateKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->

        <!--#region DataGrid-->
        <Style x:Key="DataGridStyleCustom" 
               TargetType="{x:Type DataGrid}">
            <Setter Property="Background" 
                    Value="Transparent"/>
            <Setter Property="Foreground" 
                    Value="White"/>
            <Setter Property="BorderBrush" 
                    Value="#FF688CAF"/>
            <Setter Property="BorderThickness" 
                    Value="1"/>
            <Setter Property="RowDetailsVisibilityMode" 
                    Value="VisibleWhenSelected"/>
            <Setter Property="ScrollViewer.CanContentScroll" 
                    Value="true"/>
            <Setter Property="ScrollViewer.PanningMode"
                    Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" 
                    Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGrid}">
                        <Border BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="Transparent" 
                                Padding="{TemplateBinding Padding}" 
                                SnapsToDevicePixels="True">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" 
                                                     StartPoint="0.5,0">
                                    <GradientStop Color="#FFFF6C31" 
                                                  Offset="0.0"/>
                                    <GradientStop Color="#FFFFAF31" 
                                                  Offset="1.0"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <ScrollViewer x:Name="DG_ScrollViewer" 
                                          Focusable="false">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            <Button Command="{x:Static DataGrid.SelectAllCommand}" 
                                                    Focusable="false" 
                                                    Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" 
                                                    Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                    Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" 
                                                    Background="#FFFF0101" 
                                                    BorderBrush="#FF00FF28" 
                                                    Foreground="#FF0003FF"/>
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" 
                                                                            Grid.Column="1" 
                                                                            Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" 
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}"
                                                                    Grid.ColumnSpan="2" 
                                                                    Grid.Row="1"/>
                                            <ScrollBar x:Name="PART_VerticalScrollBar" 
                                                       Grid.Column="2"
                                                       Maximum="{TemplateBinding ScrollableHeight}" 
                                                       Orientation="Vertical" 
                                                       Grid.Row="1"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                       ViewportSize="{TemplateBinding ViewportHeight}" 
                                                       Background="Transparent" 
                                                       BorderBrush="Transparent" 
                                                       Foreground="Transparent"/>
                                            <Grid Grid.Column="1"
                                                  Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <ScrollBar x:Name="PART_HorizontalScrollBar" 
                                                           Grid.Column="1" 
                                                           Maximum="{TemplateBinding ScrollableWidth}" 
                                                           Orientation="Horizontal" 
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" 
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" 
                                                           ViewportSize="{TemplateBinding ViewportWidth}" 
                                                           BorderBrush="Transparent" 
                                                           Background="Transparent"/>
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" 
                                   Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" 
                                   Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" 
                            Value="false"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Background" 
                    Value="Transparent"/>
            <Setter Property="Cursor" 
                    Value="SizeWE"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border Background="{TemplateBinding Background}" 
                                Padding="{TemplateBinding Padding}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="DataGridColumnHeaderStyle1" 
               TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="VerticalContentAlignment" 
                    Value="Center"/>
            <Setter Property="Height" 
                    Value="23"/>
            <Setter Property="Foreground" 
                    Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                        <Grid>
                            <Themes:DataGridHeaderBorder BorderBrush="red" 
                                                         Background="Transparent" 
                                                         BorderThickness="{TemplateBinding BorderThickness}" 
                                                         IsClickable="{TemplateBinding CanUserSort}" 
                                                         IsPressed="{TemplateBinding IsPressed}"
                                                         IsHovered="{TemplateBinding IsMouseOver}" 
                                                         Padding="{TemplateBinding Padding}" 
                                                         SortDirection="{TemplateBinding SortDirection}" 
                                                         SeparatorBrush="{TemplateBinding SeparatorBrush}"
                                                         SeparatorVisibility="{TemplateBinding SeparatorVisibility}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                  RecognizesAccessKey="True" 
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Themes:DataGridHeaderBorder>
                            <Thumb x:Name="PART_LeftHeaderGripper"
                                   HorizontalAlignment="Left" 
                                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
                            <Thumb x:Name="PART_RightHeaderGripper" 
                                   HorizontalAlignment="Right" 
                                   Style="{StaticResource ColumnHeaderGripperStyle}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <Style x:Key="DataGridCellStyleCustom" TargetType="{x:Type DataGridCell}">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" 
                            Value="gray"/>
                    <Setter Property="Foreground" 
                            Value="white"/>
                    <Setter Property="BorderBrush" 
                            Value="DarkGray"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" 
                         Value="True">
                    <Setter Property="BorderBrush" 
                            Value="{DynamicResource {x:Static DataGrid.FocusBorderBrushKey}}"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" 
                                   Value="true"/>
                        <Condition Property="Selector.IsSelectionActive" 
                                   Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="BorderBrush" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
                    <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}}"/>
                </MultiTrigger>
                <Trigger Property="IsEnabled" 
                         Value="false">
                    <Setter Property="Foreground" 
                            Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        
        <!--#region ScrollBar-->
        <!--#region Brushes-->
        <!--Control colors.-->
        <Color x:Key="WindowColor">Transparent</Color>
        <Color x:Key="ContentAreaColorLight">Gray</Color>
        <Color x:Key="ContentAreaColorDark">DarkGray</Color>

        <Color x:Key="DisabledControlLightColor">Gray</Color>
        <Color x:Key="DisabledControlDarkColor">DarkGray</Color>
        <Color x:Key="DisabledForegroundColor">#FFFF6C31</Color>

        <Color x:Key="SelectedBackgroundColor">Gray</Color>
        <Color x:Key="SelectedUnfocusedColor">DarkGray</Color>

        <Color x:Key="ControlLightColor">#FFFF6C31</Color>
        <Color x:Key="ControlMediumColor">#FFFFAF31</Color>

        <Color x:Key="ThumbLightColor">#FFFFAF31</Color>
        <Color x:Key="ThumbMediumColor">#FFFF6C31</Color>

        <Color x:Key="ControlDarkColor">White</Color>

        <Color x:Key="ControlMouseOverColor">White</Color>
        <Color x:Key="ControlPressedColor">#FFFF6C31</Color>

        <Color x:Key="GlyphColor">White</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFFFAF31</Color>
        <Color x:Key="BorderMediumColor">#FFFFAF31</Color>
        <Color x:Key="BorderDarkColor">#FFFF6C31</Color>

        <Color x:Key="PressedBorderLightColor">gray</Color>
        <Color x:Key="PressedBorderDarkColor">gray</Color>

        <Color x:Key="DisabledBorderLightColor">LightGray</Color>
        <Color x:Key="DisabledBorderDarkColor">DarkGray</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Gray</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                             EndPoint="0.5,1"
                             StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                          Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                          Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                          Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                             StartPoint="0,0"
                             EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                                  Offset="0" />
                    <GradientStop Color="#600000FF"
                                  Offset="0.4" />
                    <GradientStop Color="#600000FF"
                                  Offset="0.6" />
                    <GradientStop Color="#000000FF"
                                  Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>
        <!--#endregion-->

        <Style x:Key="ScrollBarLineButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="Border"
                                Margin="0"
                                CornerRadius="1"
                                BorderThickness="2">
                            <Border.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderMediumColor}"
                                                          Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                          Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"/>
                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                          Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.Background>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver" />
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                                          Storyboard.TargetProperty="(Panel.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow"
                                                                          Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0"
                                                                     Value="{StaticResource DisabledForegroundColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Path x:Name="Arrow"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}" >
                                <Path.Fill>
                                    <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                                </Path.Fill>
                            </Path>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarPageButton"
               TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="{x:Null}" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb"
               TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Setter Property="IsTabStop"
                    Value="false" />
            <Setter Property="Focusable"
                    Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="2"
                                BorderThickness="5">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="45" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FFFFAF31" Offset="0"/>
                                    <GradientStop Color="#FFFF6C31" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                            <Border.Background>
                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                    <LinearGradientBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0.5" CenterX="0.5"/>
                                            <SkewTransform CenterY="0.5" CenterX="0.5"/>
                                            <RotateTransform Angle="45" CenterY="0.5" CenterX="0.5"/>
                                            <TranslateTransform/>
                                        </TransformGroup>
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="#FFFF6C31" Offset="0"/>
                                    <GradientStop Color="#FFFFAF31" Offset="1"/>
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3"
                        CornerRadius="2"
                        Background="{x:Null}" />
                <RepeatButton Grid.Row="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Height="18"
                              Command="ScrollBar.LineUpCommand"
                              Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track x:Name="PART_Track"
                       Grid.Row="1"
                       IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
                               Margin="1,0,1,0">
                            <Thumb.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                                          Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Thumb.BorderBrush>
                            <Thumb.Background>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"
                                                          Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                          Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="2"
                              Style="{StaticResource ScrollBarLineButton}"
                              Height="18"
                              Command="ScrollBar.LineDownCommand"
                              Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3"
                        CornerRadius="2"
                        Background="{x:Null}" />
                <RepeatButton Grid.Column="0"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="18"
                              Command="ScrollBar.LineLeftCommand"
                              Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}"
                               Margin="0,1,0,1">
                            <Thumb.BorderBrush>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="1,0">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}"
                                                          Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                                                          Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Thumb.BorderBrush>
                            <Thumb.Background>
                                <LinearGradientBrush StartPoint="0,0"
                                                     EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource ControlLightColor}"
                                                          Offset="0.0" />
                                            <GradientStop Color="{DynamicResource ControlMediumColor}"
                                                          Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Thumb.Background>
                        </Thumb>
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}"
                                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2"
                              Style="{StaticResource ScrollBarLineButton}"
                              Width="18"
                              Command="ScrollBar.LineRightCommand"
                              Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}"
               TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels"
                    Value="True" />
            <Setter Property="OverridesDefaultStyle"
                    Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation"
                         Value="Horizontal">
                    <Setter Property="Width"
                            Value="Auto" />
                    <Setter Property="Height"
                            Value="18" />
                    <Setter Property="Template"
                            Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation"
                         Value="Vertical">
                    <Setter Property="Width"
                            Value="18" />
                    <Setter Property="Height"
                            Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--#endregion-->
        
    </Window.Resources>
    <Grid>
        <Grid.Background>
            <LinearGradientBrush EndPoint="0.5,1" 
                                 StartPoint="0.5,0">
                <LinearGradientBrush.RelativeTransform>
                    <TransformGroup>
                        <ScaleTransform CenterY="0.5" 
                                        CenterX="0.5"/>
                        <SkewTransform CenterY="0.5" 
                                       CenterX="0.5"/>
                        <RotateTransform Angle="90" 
                                         CenterY="0.5" 
                                         CenterX="0.5"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </LinearGradientBrush.RelativeTransform>
                <GradientStop Color="#FF313131" 
                              Offset="0"/>
                <GradientStop Color="#FF313131" 
                              Offset="1"/>
                <GradientStop Color="#FF454545" 
                              Offset="0.5"/>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="711*"/>
            <ColumnDefinition Width="80"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="25"/>
            <RowDefinition />
        </Grid.RowDefinitions>
        <Menu  VerticalAlignment="Top" 
               BorderThickness="0"
               Height="25" 
               Grid.ColumnSpan="2"
               Grid.RowSpan="2" >
            <MenuItem Header="Файл" 
                      Foreground="White"
                      Margin="5,0,0,0">
                <MenuItem Header="Сохранить"  IsEnabled="False"/>
                <MenuItem Header="Экспорт" >
                    <MenuItem x:Name="menuSaveToTxt" 
                              Header="Текстовый файл"
                              Click="MenuSaveToTxt_Click"/>
                    <MenuItem x:Name="menuSaveToExcel" 
                              Header="Книга Excel"
                              Click="MenuSaveToExcel_Click"/>
                    <MenuItem x:Name="menuSaveToCSV" 
                              Header="CSV"
                              Click="MenuSaveToCSV_Click" />
                </MenuItem>
                <MenuItem x:Name="menuExit" 
                          Header="Выход"
                          Click="MenuExit_Click" 
                          BorderThickness="0,1,0,0"
                          BorderBrush="#FF6F6F6F" />
            </MenuItem>
            <MenuItem Header="Правка" IsEnabled="False"/>
        </Menu>
        <DataGrid x:Name="dgAnimals" 
                  Grid.Row="1" 
                  Grid.Column="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  Margin="5"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False" 
                  SelectionMode="Single" 
                  HeadersVisibility="Column"
                  ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" 
                  Background="{x:Null}" 
                  BorderBrush="{x:Null}" 
                  CellStyle="{DynamicResource DataGridCellStyleCustom}">
        </DataGrid>
        <StackPanel Grid.Column="1"
                    Grid.Row="1"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Top" 
                    Margin="5">
            <Button x:Name="btnCreate" 
                    Content="Добавить" 
                    Click="BtnCreate_Click"
                    Style="{DynamicResource ButtonStyleCustom}"/>
            <Button x:Name="btnEdit" 
                    Content="Изменить" 
                    Click="BtnEdit_Click"
                    Style="{DynamicResource ButtonStyleCustom}"/>
            <Button x:Name="btnDelete" 
                    Content="Удалить" 
                    Click="BtnDelete_Click"
                    Style="{DynamicResource ButtonStyleCustom}"/>
        </StackPanel>
    </Grid>
</Window>